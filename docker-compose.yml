x-superset-image: &superset-image apache/superset:latest-dev
x-superset-depends-on: &superset-depends-on
  - db
  - redis
x-superset-volumes: &superset-volumes
  # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - ./docker:/app/docker
  - superset_home:/app/superset_home

version: "3.7"
services:
  redis:
    image: redis:latest
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - redis:/data
    networks:
      - dremio

  db:
    env_file: docker/.env-non-dev
    image: postgres:10
    container_name: superset_db
    restart: unless-stopped
    volumes:
      - db_home:/var/lib/postgresql/data
    networks:
      - dremio

  superset:
    env_file: docker/.env-non-dev
    image: *superset-image
    container_name: superset_app
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    ports:
      - 8088:8088
    depends_on: *superset-depends-on
    volumes: *superset-volumes
    networks:
      - dremio

  superset-init:
    image: *superset-image
    container_name: superset_init
    command: ["/app/docker/docker-init.sh"]
    env_file: docker/.env-non-dev
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    networks:
      - dremio

  superset-worker:
    image: *superset-image
    container_name: superset_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    networks:
      - dremio

  superset-worker-beat:
    image: *superset-image
    container_name: superset_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
    networks:
      - dremio

  minio:
    image: minio/minio:RELEASE.2021-10-08T23-58-24Z
    command: server /data --console-address ":9001"
    ports: 
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ${pwd}:/data
    networks:
      - dremio

  database:
    image: postgres:12
    ports: 
      - 5432:5432
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - dremio
    environment:
      POSTGRES_USER: ${username}
      POSTGRES_PASSWORD: ${password}
      POSTGRES_DB: 'dremio'

  dremio:
    image: dremio/dremio-oss
    volumes:
      - dremio_data:/var/lib/dremio
    ports:
      - "2181:2181"   # ZooKeeper
      - "9047:9047"   # UI (HTTP)
      - "31010:31010" # ODBC/JDBC clients --- dremio://{username}:{password}@host.docker.internal:31010/dremio
      - "32010:32010" # Arrow Flight Port --- dremio+flight://{username}:{password}@{host}:{port}/dremio
      - "45678:45678" # Inter-node communication
    networks:
      - dremio

  notebook:
    image: jupyter/pyspark-notebook:spark-3.1.2
    environment:
#      - PYSPARK_SUBMIT_ARGS=--packages com.amazonaws:aws-java-sdk-bundle:1.11.819,org.apache.hadoop:hadoop-aws:3.2.0 pyspark-shell
      - PYSPARK_SUBMIT_ARGS=--packages=org.apache.hadoop:hadoop-common:3.1.2,org.apache.hadoop:hadoop-client:3.1.2,org.apache.hadoop:hadoop-aws:3.1.2,io.delta:delta-core_2.12:1.0.0 --conf "spark.sql.extensions=io.delta.sql.DeltaSparkSessionExtension" --conf "spark.sql.catalog.spark_catalog=org.apache.spark.sql.delta.catalog.DeltaCatalog" pyspark-shell
    volumes:    
    ports: 
      - "8888:8888"
    networks:
      - dremio

#  spark:
#    image: datamechanics/spark:3.2.0-hadoop-3.3.1-java-11-scala-2.12-python-3.8-latest

volumes:
  superset_home:
    external: false
  db_home:
    external: false
  redis:
    external: false
  dremio_data:
  minio_data:
  pg_data:

networks:
  dremio:
